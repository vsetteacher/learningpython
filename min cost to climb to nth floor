class Solution:
    def minCostClimbingStairs(self, cost):
        """
        :type cost: List[int]
        :rtype: int
        """
        n = len(cost)
        f = [None]*n
        
  
        # base case 
        if n == 1: 
            return cost[0] 
  
        # initially to climb  
        # till 0-th or 1th stair 
        f[0] = cost[0]
        f[1] = cost[1] 
  
        # iterate for finding the cost 
        for i in range(2, n):  
            f[i] = min(f[i - 1], f[i - 2]) + cost[i] 
  
        # return the minimum 
        return min(f[n - 2], f[n - 1]) 
