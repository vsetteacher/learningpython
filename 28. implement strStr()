# too slow to pass time limit of worst case
class Solution:
    def strStr(self, haystack, needle):
        """
        :type haystack: str
        :type needle: str
        :rtype: int
        """
        result = 0
        
        if not needle: return result
        if len(needle) > len(haystack): return -1

        for i in range(len(haystack)):
            for j in range(len(needle)):
                
                if (i + j) < len(haystack) and haystack[i + j] == needle[j]:
                    result = i
                    
                else:
                    result = -1
                    break
            if result != -1:
                return result
        return -1
############################################################################
#using python slice
class Solution(object):
def strStr(self, haystack, needle):
    """
    :type haystack: str
    :type needle: str
    :rtype: int
    """
    if not needle: return result
    if len(needle) > len(haystack): return -1
    for i in range(len(haystack) - len(needle)+1):
        if haystack[i] != needle[0]:
            continue
        if haystack[i:i+len(needle)] == needle:
            return i
    return -1
